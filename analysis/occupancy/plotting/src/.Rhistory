rm(list=ls())
setwd('~/Dropbox/hedgerow_metacom/analysis/occupancy')
library(igraph)
library(bipartite)
library(RColorBrewer)
source('src/initialize.R')
source('src/misc.R')
source('plotting/src/makeNetworkFig.R')=



plotAllStatuses <- function(){
    makeNetworkFig(spec, sys, lat.long=lat.long,
                   rows="Site",
                   cols="GenusSpecies",
                   nets=nets.year,
                   natural.cover=landcover.nat,
                   add=TRUE,
                   rescale = FALSE)
}
plotAllStatuses <- function(){
    makeNetworkFig(spec, sys, lat.long=lat.long,
                   rows="Site",
                   cols="GenusSpecies",
                   nets=nets.year,
                   natural.cover=landcover.nat,
                   add=TRUE,
                   rescale = FALSE)
}
)
model.input$inits
dimnames(model.input$data$X)
nets.yr.sp
nets.year.sp
lapply(nets.yr.sp, colnames)
lapply(nets.year.sp, colnames)
occ.data
    keep.sites <- dimnames(model.input$data$X)$sites
keep.sites
keep.sites
keep.sites
keep.species
names(ms.ms.nimble)
species
nimble.sum
nimble.sum
dim(nimble.sum)
?grep
colnames(nimble.sum)
indexes
indexes
indexes
indexes
site.num
sites
sites
unique(site.num)
nimble.site.ave
nimble.site.save
nimble.site.ave
names(ms.ms.nimble)
 dimnames(ms.ms.nimble[[1]]$summary)
names(model.input)
names(model.input)
params.to.get
)
params[[1]]
head(nimble.sum)
params
params[[1
]]
params[[2]]
)
indexes[[1]]
indexes
params[[3]]
+ + > 
params
paste0("^(?!mu)&", "phi.sp.mean")
params[[3]]
)
params
params
> 
params[[1
]]
params
x
Q
x
)
Q
params[[3]]
params
params[[1]]
names(params)
quartz()
quartz()
