\documentclass{article}
\usepackage{natbib}
\usepackage[unicode=true]{hyperref}
\usepackage{geometry}
\usepackage{hyperref}
\usepackage{color}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{verbatim}
\usepackage{mathpazo}
\usepackage{setspace}
\usepackage{multirow}
\usepackage{fullpage}
\usepackage{lscape}
\usepackage{fancyhdr}
\usepackage{wrapfig,lipsum,booktabs}
\usepackage[normalem]{ulem}
\usepackage[parfill]{parskip}
\usepackage{multirow}
\geometry{tmargin=1in,bmargin=1in,lmargin=1in,rmargin=1in}

\bibliographystyle{ecology_let}

%% for inline R code: if the inline code is not correctly parsed, you will see a message
\newcommand{\rinline}[1]{SOMETHING WRONG WITH knitr}
%% begin.rcode setup, include=FALSE
%library(lme4)
%library(lmerTest)
%library(vegan)
%library(bipartite)
%library(igraph)
%library(nimble)
% library(knitr)
% library(highr)
%% end.rcode

\begin{document}
\title{Proximity of restored hedgerows interacts with local floral diversity and species traits to shape  long-term pollinator metacommunity dynamics: a walk through of the models and analyses}
\author{Lauren Ponisio}


\maketitle

\begin{figure}[h!]
\centering
\includegraphics[width=0.6\textwidth]{figure/degree_spatial.pdf}
\label{fig:network}
\end{figure}
\clearpage

\section{Overview}
In our study we examine the metacommunity dynamics of plant-pollinator
communities using variety of different methods including 1) occupancy
modeling and 2) network analyses.  We are committed to reproducible
science and all analytical code will be maintained on github, along
with this write up.

The entire analysis is executable from the main.sh file. All of the
packages needed to run the analyses are listed in the packages.sh
file. All analyses were run using R (version $3.5.1$)
and nimble (0.6-12).

Note, there is an incompatibility with Nimble version 7.0 released in
February 2019. If this effects you can you either install the older
version of Nimble, or install from the branch
"avoid-protect-stack-overflow" directly from github. See post at
\url{https://groups.google.com/forum/#!topic/nimble-users/k6VMapOfxOk}

Hopefully this bug will be fixed soon and the models will run on any
version of NIMBLE.

Navigate to the analysis folder within the github repo
(hedgerow\_metacommunity) then the main.sh file can be selected and
run (a warning, the occupancy analyses each take several hours on my
2.3 GHz imac pro, so all together they will take quite a while), you
could run all of the analyses in the study by running this line in
BASH.

%% begin.rcode bash-chunk2, engine='bash', eval=FALSE
% bash main.sh
%% end.rcode

This will somewhat helpfully print the results of each analysis
and re-create any accompanying figures.

We will walk through each the main script for each analysis
individually.

\section{Occupancy model}

The occupancy models are run through the main.R file in the
analysis/occupancy folder. The script begins by setting the arguments
for prepping the data. Run as is to reproduce the data used in the
study. Prior analyses used the area of hedgerows in buffers weighted
by log distance from a focal site instead of the Gaussian decay
method, with similar results. In addition, the method for calculating
the habitat quality of a patch can be toggled using the
``col.name.div.type" argument. Other options are plant richness
``Richness" or the diversity of flowers visited by pollinators
``div.visits". All measures gave qualitatively similar results.

Importantly, ``natural.decay" and ``HR.decay" change the decay
($\alpha$) of weighting of remnant and hedgerow area,
respectively. Different combinations ($350$, $1000$, and $2500$) can
be used to change the steepness of the decay rate from very steep
($\alpha=350$ represents $98.5\%$ reduction in weight by $1$ $km$) to
very shallow ($\alpha=2500$ represents a $98.5\%$ reduction in weight
by $7$ $km$).


 The main.sh script executes all combinations of decay
rates. They are executed individually because the nimble models take a
considerable amount of computer memory which is not cleared after the
model is run. Running them all in a four loop within the same instance
of R would overload most computers. The last argument supplied is a
scale parameter to determine the number for iterations ($1e3$*scale)
and burnin ($1e1$*scale).

To run the MCMC in order to estimate the model coefficients, we use the
NIMBLE R package \citep{nimble-14, de2017programming}.  ``nimble"
stands for ``numerical inference for statistical models with Bayesian
and likelihood estimation."  It implements almost the same model
language as BUGS and JAGS, but supports easy customization of MCMC
algorithms, including writing new samplers, and user-defined functions
and distributions, which opens up enormous flexibility in how models
are written. This enabled us to integrate over the latent states,
increasing computational efficiency by an order of magnitude in
comparison to sampling every latent state. 


The multi-species, multi-season occupancy model is as follows (the
model code follows the notation in equation 5-6 in the manuscript,
except $HRwtProx$ is abbreviated as $hr.area$, and $RemnantWtProx$ as
$nat.area$):
%% begin.rcode setupoccupancy, include=FALSE
% setwd('../analysis/occupancy')
% source('src/models/filter.R')
%% end.rcode

%% begin.rcode occupancy_model
%% ms.ms.occ
%% end.rcode

For those of you familiar with working in BUGS or JAGS, the main
difference here is the call to 'dDynamicOccupancy'. This is the
function allows us to numerically integrate over sequences of latent
states to directly calculate model likelihoods, removing the need to
perform MCMC sampling of these latent variables.

%% begin.rcode setupdynamicOcc, include=FALSE
% setwd('../analysis/occupancy')
% source('src/dynamicOcc.R')
%% end.rcode

%% begin.rcode dynamicOcc
%% dDynamicOccupancy
%% end.rcode

The number of MCMC iterations, burnin, number of chains, etc. can be
toggled by changing the value of the scale object. This script will
also generate MCMC diagnostic figures ($src\_plotting/checkChains.R$),
interaction plots ($src\_plotting/plotInteractions.R$), and posterior
mean and credible internal plots and table ($src\_plotting/posteriorPlotting.R$).


\section{Metacommunity Network Analysis}

There are three versions of the metacommunity network analysis. The
first two follow the suggestion of an anonymous reviewer and use the
inferred latent states from the occupancy model to estimate the
presence/absence of a species at a site. The third uses the raw
data. The results are almost completely consistent between the options,
though some of the pvalues bounce between marginally significant and
significant. 

Unfortunately, the fancy work we did to integrate out the latent
states (i.e., filter) is not helpful here since we need to sample the latent states
in order to use them in this analysis. So we created an alternative
version of the model which run a bit more slowly but samples all of
the latent states. It also outputs a truly massive model output with
with all the samples of the Zs.

In the main.sh file, you can run this model but setting filtering
FALSE which is done by passing the argument "latent" into the setup
code. We use the alpha values for the best fitting model. 

%% begin.rcode bash-chunk3, engine='bash', eval=FALSE
% Rscript analysis/occupancy/main.R "2500" "350" "latent" "all" 1e2
%% end.rcode

Once we have the Zs, we have two options for creating the networks
from which to calculate the centrality metrics for species and
sites. The first creates a posterior distribution of metrics but
taking a random sample of the MCMC samples for the Zs, building
networks for each sample, then calculating metrics for each
sample. The mean and SD of the posterior distribution of network
metrics is then calculated and used in weighted linear mixed models. 


This analysis can be run using the following line in the shell

%% begin.rcode bash-chunk4, engine='bash', eval=FALSE
Rscript analysis/networks/Znetwork_posterior.R
%% end.rcode


The second flavor of this analysis uses the probability a species is
present at a site as inferred from the MCMC samples by taking the mean
Z value across all samples. This probability is then used as a weight
when constructing the metacommunity networks. The metrics of those
weighted networks and then used in the same linear mixed models as the
above (except without weights).

That analysis can be executed using the following line in the shell. 
%% begin.rcode bash-chunk5, engine='bash', eval=FALSE
Rscript analysis/networks/Znetwork.R
%% end.rcode


The last variety of this analysis uses the raw data which includes
species abundances. The data is not corrected for imperfect detection.
The 'spTempMets.R' file executes the network analyses. The user can
provide any network metrics taken by the function 'speciesLevel' in
the bipartite package.

This analysis can be run using the following line in the shell

%% begin.rcode bash-chunk6, engine='bash', eval=FALSE
Rscript analysis/networks/spTempMets.R
%% end.rcode


All of these flavors results in the same inferences about the effect
of site and species traits on their metacommunity network roles. 


\clearpage
\bibliography{refs}
\clearpage


\end{document}
